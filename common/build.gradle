import org.apache.tools.ant.filters.ReplaceTokens
import dev.architectury.plugin.TransformingTask

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    common(rootProject.enabled_platforms.split(",")) {
        it.platformPackage "neoforge", "forge"
    }
}

configurations {
    bundle { transitive = false }
    implementation.extendsFrom bundle
}

dependencies {
    // Only needed for suppressing Fabric build spam
    modImplementation "net.fabricmc:fabric-loader:$loader_version"

    bundle group: 'com.personthecat', name: 'fastnoise', version: fastnoise_version
    bundle group: 'com.personthecat', name: 'fresult', version: fresult_version
    bundle group: 'org.exjson', name: 'xjs-data', version: xjs_data_version
    bundle group: 'org.exjson', name: 'xjs-compat', version: xjs_compat_version
}

task processSource(type: Sync) {
    from sourceSets.main.java
    inputs.properties(mod_version: mod_version, mod_id: mod_id, mod_name: mod_name)
    filesMatching(['**/LibReference.java']) {
        filter(ReplaceTokens, tokens: [MOD_VERSION: mod_version, MOD_ID: mod_id, MOD_NAME: mod_name])
    }
    into "$buildDir/src"
}

compileJava {
    source = processSource.outputs
    options.compilerArgs << '-parameters'
}

shadowJar {
    configurations = [project.configurations.bundle]
    archiveClassifier.set ''
}

tasks.withType(TransformingTask) {
    if (it.name.startsWith('transformProduction')) {
        it.dependsOn remapJar
        it.dependsOn shadowJar
        input = shadowJar.archiveFile
    }
}

build.dependsOn shadowJar
