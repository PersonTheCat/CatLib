
plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    common(project(path: ":common", configuration: "namedElements")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: 'transformProductionFabric')) {
        transitive = false
    }
    common(project(path: ":fabric-like", configuration: "namedElements")) {
        transitive = false
    }
    shadowCommon(project(path: ":fabric-like", configuration: 'transformProductionFabric')) {
        transitive = false
    }

    modImplementation "net.fabricmc:fabric-loader:$loader_version"
    modApi "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modApi "curse.maven:ClothConfig-319057:$cloth_maven_version"
}

processResources {
    filesMatching(['fabric.mod.json']) {
        expand project.properties
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier 'dev'
}