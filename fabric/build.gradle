
architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    developmentFabric.extendsFrom common
}

repositories {
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
    common(project(path: ":common", configuration: "namedElements"))
    shadowCommon(project(path: ":common", configuration: 'transformProductionFabric'))

    modImplementation "net.fabricmc:fabric-loader:$loader_version"
    modApi "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modApi("me.shedaniel.cloth:cloth-config-fabric:$cloth_version") {
        exclude group: 'net.fabricmc.fabric-api'
    }

    testImplementation project(path: ":common", configuration: 'transformProductionFabric')
    testImplementation "dev.architectury:architectury-transformer:5.2.83"
    testImplementation "dev.architectury:architectury-mixin-remapper-service:2.0.9"
}

processResources {
    filesMatching(['fabric.mod.json']) {
        expand project.properties
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set 'dev'
}