
architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    commonImplementation
    compileClasspath.extendsFrom commonImplementation
    runtimeClasspath.extendsFrom commonImplementation
    developmentFabric.extendsFrom commonImplementation
}

dependencies {
    bundle(project(path: "$common", configuration: 'transformProductionFabric')) {
        transitive = false
    }
    commonImplementation(project(path: "$common", configuration: "namedElements")) {
        transitive = false
    }

    modImplementation "net.fabricmc:fabric-loader:$loader_version"
    modApi "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modApi "curse.maven:ClothConfig-319057:$cloth_maven_version"
}

processResources {
    filesMatching(['**/fabric.mod.json']) {
        expand project.properties
    }
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier 'remapped'
}
