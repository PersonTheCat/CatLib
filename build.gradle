
plugins {
    id 'architectury-plugin' version "$architectury_version"
    id 'dev.architectury.loom' version "$architectury_loom_version" apply false
}

architectury {
    minecraft = mc_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:$mc_version"
        mappings loom.officialMojangMappings()

        api group: 'com.personthecat', name: 'fastnoise', version: fastnoise_version
        api group: 'com.personthecat', name: 'fresult', version: fresult_version
        api group: 'org.exjson', name: 'xjs-data', version: xjs_data_version
        api group: 'org.exjson', name: 'xjs-compat', version: xjs_compat_version

        compileOnly group: 'org.jetbrains', name: 'annotations', version: '24.1.0'

        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.2'
        testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.2'
        testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.10.2'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.+'
        testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.+'
        testImplementation group: 'org.jetbrains', name: 'annotations', version: '24.1.0'
        testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    archivesBaseName = "$archive_base-$platform"
    version mod_version

    repositories {
        // More convenient access to CF mods.
        maven { url 'https://www.cursemaven.com' }
        mavenLocal()
        mavenCentral()
    }

    tasks.withType(Test) {
        useJUnitPlatform()
        ignoreFailures = false
        failFast = true
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        javadoc.options.addStringOption('Xdoclint:none', '-quiet')
        archiveClassifier.set 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        duplicatesStrategy DuplicatesStrategy.INCLUDE
        archiveClassifier.set 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    if (enable_publishing == 'true') {
        publishing {
            repositories {
                maven {
                    name = 'OSSRH'
                    url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                    credentials {
                        username = project.findProperty('ossrh.username') ?: System.getenv('OSSRH_USERNAME')
                        password = project.findProperty('ossrh.password') ?: System.getenv('OSSRH_PASSWORD')
                    }
                }
            }
            publications {
                mavenJava(MavenPublication) {
                    groupId = group
                    artifactId = pom_artifact_id
                    version = version

                    pom {
                        name = pom_name
                        description = pom_description
                        url = pom_url
                        licenses {
                            license {
                                name = pom_license_name
                                url = pom_license_url
                            }
                        }
                        developers {
                            developer {
                                id = pom_developer
                                name = pom_developer_name
                                email = pom_developer_email
                            }
                        }
                        scm {
                            connection = pom_scm_connection
                            developerConnection = pom_scm_developer_connection
                            url = pom_scm_url
                        }
                    }

                    from components.java
                }
            }
        }

        signing {
            sign publishing.publications.mavenJava
        }
    }
}
